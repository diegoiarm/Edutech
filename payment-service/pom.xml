<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Modelo base de Maven -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Herencia del proyecto padre (classroom) que centraliza configuración, BOM y versiones -->
    <parent>
        <groupId>com.edutech</groupId>
        <artifactId>classroom</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <!-- Coordenadas GAV (GroupId, ArtifactId, Version) del proyecto -->
    <groupId>com.edutech</groupId>
    <artifactId>payment-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <!-- Nombre y descripción del proyecto -->
    <name>Módulo de Pagos EduTech</name>
    <description>Microservicio Spring Boot para la gestión de pagos, transacciones y cupones de descuento</description>

    <!-- Forma de empaquetado -->
    <packaging>jar</packaging>

    <!-- Dependencias necesarias para este microservicio -->
    <dependencies>

        <!-- Módulo común con DTOs, excepciones y utilidades -->
        <dependency>
            <groupId>com.edutech</groupId>
            <artifactId>common</artifactId>
        </dependency>

        <!-- Spring Web: Controladores REST -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring JPA: acceso a base de datos con Hibernate -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Conector MySQL para JPA -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>

        <!-- Validación con anotaciones como @Valid, @NotNull, etc. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Lombok para reducir código repetitivo con anotaciones como @Getter, @Builder -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- MapStruct: generador de código para mapeo entre entidades y DTOs -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>

        <!-- Procesador de anotaciones de MapStruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Dependencias de pruebas con JUnit, MockMvc, etc. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Cliente Eureka para registro y descubrimiento de servicios -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>

        <!-- Spring Boot DevTools para desarrollo -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>

    <!-- Configuración del proceso de compilación -->
    <build>
        <plugins>
            <!-- No se necesita configurar versiones ni annotationProcessorPaths aquí porque ya están en el padre -->
        </plugins>
    </build>

</project> 