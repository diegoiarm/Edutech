<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- Modelo base de Maven -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Herencia del proyecto padre (classroom) que centraliza configuración, BOM y versiones -->
    <parent>
        <groupId>com.edutech</groupId>
        <artifactId>classroom</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>     <!-- ajusta si está en otra ruta -->
    </parent>

    <!-- Coordenadas GAV (GroupId, ArtifactId, Version) de mi proyecto -->
    <groupId>com.edutech</groupId>
    <artifactId>com-edutech-support</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <!-- Nombre y descripción del proyecto common -->
    <name>Classroom - Support Module</name>
    <description>Support Service: support ticket management and handling of user inquiries.</description>

    <!-- Forma de empaquetado es .jar -->
    <packaging>jar</packaging>

    <!-- Dependencias necesarias para este microservicio -->
    <dependencies>

        <!-- Módulo común con DTOs, excepciones, utilidades, etc. -->
        <dependency>
            <groupId>com.edutech</groupId>
            <artifactId>com-edutech-common</artifactId>
        </dependency>

        <!-- Spring Web: Controladores REST -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring JPA: acceso a base de datos con Hibernate -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Conector MySQL para JPA -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>

        <!-- Validación con anotaciones como @Valid, @NotNull, etc. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Lombok para reducir boilerplate con anotaciones como @Getter, @Builder -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope> <!-- No se empaqueta, solo se usa en compilación -->
        </dependency>

        <!-- MapStruct: generador de código para mapeo entre entidades y DTOs -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
        </dependency>

        <!-- Procesador de anotaciones de MapStruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
        </dependency>

        <!-- Dependencias de testing con JUnit, MockMvc, etc. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 
            Dependencia para habilitar este módulo como cliente de Eureka.
            Permite que este microservicio se registre automáticamente en el servidor Eureka
            para ser descubierto por otros servicios dentro del ecosistema Spring Cloud.
            No se especifica versión ya que esta será gestionada desde el proyecto padre
            mediante <dependencyManagement> con el BOM de Spring Cloud.
        -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency> 

        <!-- 
            Spring Boot DevTools: Permite recarga automática del proyecto (hot reload),
            útil solo en desarrollo. No se recomienda en producción. 
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional> <!-- Indica que es opcional: no se transita a otros módulos ni se empaqueta por defecto -->
        </dependency>

        <!-- Swagger/OpenAPI UI para Spring Boot 3+ -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.2.0</version>
        </dependency>

        <!-- Spring Boot Starter Hateoas -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>

    </dependencies>

    <!-- Empaquetado ejecutable con Spring Boot -->
    <build>
	    <plugins>
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
		        <executions>
		            <execution>
		            <goals>
		                <goal>repackage</goal>
		            </goals>
		            </execution>
		        </executions>
		        <configuration>
		            <mainClass>com.edutech.support.ClassroomSupportModuleApplication</mainClass>
		        </configuration>
		        </plugin>
		
		        <!-- Plugin de compilación para procesadores de anotaciones (MapStruct + Lombok) -->
		        <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-compiler-plugin</artifactId>
		        <configuration>
		            <parameters>true</parameters>
		            <annotationProcessorPaths>
		            <path>
		                <groupId>org.mapstruct</groupId>
		                <artifactId>mapstruct-processor</artifactId>
		            </path>
		            <path>
		                <groupId>org.projectlombok</groupId>
		                <artifactId>lombok</artifactId>
		            </path>
		            </annotationProcessorPaths>
		        </configuration>
	        </plugin>
	    </plugins>
    </build>

</project>