<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <!-- Modelo base de Maven -->
    <modelVersion>4.0.0</modelVersion>

    <!-- Herencia del proyecto padre (classroom) que centraliza configuración, BOM y versiones -->
    <parent>
        <groupId>com.edutech</groupId>
        <artifactId>classroom</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <!-- Coordenadas GAV (GroupId, ArtifactId, Version) de mi proyecto -->
    <groupId>com.edutech</groupId>
    <artifactId>com-edutech-eureka</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!-- Nombre y descripción del proyecto eureka server -->
    <name>Classroom - Eureka Module</name>
    <description>Netflix Eureka: Dynamic microservice discovery, registration, and lookup.</description>

    <!-- Forma de empaquetado es .jar -->
    <packaging>jar</packaging>

    <!-- Dependencias necesarias para este microservicio -->
    <dependencies>

        <!-- Eureka server -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>

        <!--
            Dependencia: spring-boot-starter-test
            Es el starter fundamental para realizar todo tipo de pruebas (unitarias,
            de integración, etc.) en aplicaciones Spring Boot. Agrupa las librerías
            más comunes y necesarias para un entorno de testing robusto.
            El <scope>test</scope> asegura que solo se use en la fase de pruebas.
            
            Clases/Anotaciones Clave y su Uso:
            
            - JUnit 5 (@Test, Assertions): Framework base para definir y ejecutar casos de prueba.
            - Spring Test (@SpringBootTest, @WebMvcTest): Para cargar el contexto de Spring
              y probar componentes específicos (controladores, servicios) de forma integrada.
            - Mockito (@MockBean, Mockito.when()): Para crear objetos simulados (mocks)
              y así aislar las unidades bajo prueba de sus dependencias externas.
            - AssertJ (assertThat()): Para escribir aserciones de forma fluida y muy legible,
              mejorando la claridad de lo que se espera en los tests.
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>

    </dependencies>

    <!-- Empaquetado ejecutable con Spring Boot -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>com.edutech.eureka.ClassroomEurekaModuleApplication</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <argLine>
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        -Djdk.attach.allowAttachSelf=true
                        -XX:+EnableDynamicAgentLoading
                        -XX:-UseSharedSpaces
                        -javaagent:${user.home}/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.5/byte-buddy-agent-1.17.5.jar
                    </argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>